{
	"id": "2e1e7ab8-1d3e-4ece-ab7b-86235db97159",
	"name": "Ymdb-collection",
	"timestamp": "2025-07-18T07:44:50.043Z",
	"collection_id": "45488082-495d1ec0-ca25-4741-be69-964ea4200e55",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 316,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-07-18T07:44:46.135Z",
	"totalFail": 8,
	"results": [
		{
			"id": "1c1db09d-15e5-49cc-b7fe-de4b11fe4af1",
			"name": "get_token_for_superuser",
			"url": "http://127.0.0.1:8000/api/v1/auth/token/",
			"time": 36,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "c5cef2f1-a6f8-4f1a-80d3-d1a943894054",
			"name": "get_token_for_regular_user",
			"url": "http://127.0.0.1:8000/api/v1/auth/token/",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "293c5988-dd0a-46f4-8413-8d19423b95db",
			"name": "get_token_for_admin",
			"url": "http://127.0.0.1:8000/api/v1/auth/token/",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "a6643dc7-d2e1-4f79-a4ef-1a33e784e91b",
			"name": "get_token_for_moderator",
			"url": "http://127.0.0.1:8000/api/v1/auth/token/",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "dddd4c2a-5fc3-4039-8608-018a10f71c83",
			"name": "username_and_email_both_in_use_by_different_users",
			"url": "http://127.0.0.1:8000/api/v1/auth/signup/",
			"time": 37,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				37
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "7ec4ed3d-1d0f-476e-98a8-1df985cfa64b",
			"name": "username_in_use",
			"url": "http://127.0.0.1:8000/api/v1/auth/signup/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "e8c90bce-23e9-4602-a845-cd25e14e8454",
			"name": "email_in_use",
			"url": "http://127.0.0.1:8000/api/v1/auth/signup/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "0a33ba18-7cec-4194-9820-b4ac33c5f51d",
			"name": "use_me_as_username_forbidden",
			"url": "http://127.0.0.1:8000/api/v1/auth/signup/",
			"time": 2,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "7d6bdbb6-e113-42e3-90d7-11a2cfc9f266",
			"name": "too_long_username",
			"url": "http://127.0.0.1:8000/api/v1/auth/signup/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c7017d29-ea29-48f4-8bd9-e14ed0ddb672",
			"name": "too_long_email",
			"url": "http://127.0.0.1:8000/api/v1/auth/signup/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e0ff608d-cf86-4714-bc60-d21674cd8e61",
			"name": "user_registration_with_invalid_username",
			"url": "http://127.0.0.1:8000/api/v1/auth/signup/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "3fb952fa-0936-4848-80ac-20ada1e14736",
			"name": "get_users_list // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "29da45b9-8511-4fb7-9b00-3e87e3108dbb",
			"name": "get_user // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/regular-user/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "019d46a6-aead-436c-a4e8-48fdc393af82",
			"name": "get_users_list // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "99a1f9af-34a0-404d-9095-9bc5f7ce0889",
			"name": "get_user // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/users/regular-user/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "4ff30648-3bd7-47c3-b067-3149e2845833",
			"name": "get_filtered_users_list // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/?search=moderator",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "1a6fa9c6-b5a1-40f1-93ca-0cca932b6691",
			"name": "create_user_with_only_required_fields // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 9,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Пользователю должна быть присвоена корректная роль": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Пользователю должна быть присвоена корректная роль": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Пользователю должна быть присвоена корректная роль": true
				}
			]
		},
		{
			"id": "38f164e4-2e87-42a2-b851-aac776b995a9",
			"name": "create_user_with_full_data // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "a2091c7b-2687-4070-8a63-a80ab2f1a711",
			"name": "create_moderator // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Пользователю должна быть присвоена корректная роль": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Пользователю должна быть присвоена корректная роль": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Пользователю должна быть присвоена корректная роль": true
				}
			]
		},
		{
			"id": "fdaa0230-5a82-4163-aa69-c74da05ab22a",
			"name": "create_admin // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 7,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Пользователю должна быть присвоена корректная роль": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Пользователю должна быть присвоена корректная роль": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Пользователю должна быть присвоена корректная роль": true
				}
			]
		},
		{
			"id": "8bd18e8d-122c-4bb2-ab9e-5b6eb2f390e8",
			"name": "create_user_with_full_data // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "02c0b1ec-568d-40ad-b465-e07a5e908448",
			"name": "patch_user_full_data // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/full-data-user/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "1a13db64-0b64-4fef-a4a9-3ab172ac80c7",
			"name": "patch_user_role // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "3d47e8de-e29a-4b68-804a-ff73245508b9",
			"name": "get_users_me // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "97c9d8a3-1c7c-41c6-b7cc-0771af6d3666",
			"name": "patch_users_me_username // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "64b12f01-ffa9-4fe9-894e-f8ef214b0952",
			"name": "patch_users_me_all_data // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "ddfc26ba-0cfc-4f27-b4c7-774540027221",
			"name": "patch_users_me_roll_back // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "e9965d8e-b0e5-43bd-ac23-e45670b572be",
			"name": "get_user_list // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "257e9408-7571-49d0-93a3-08d69445d5dc",
			"name": "get_user_list // User",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "c8b614db-869e-4903-88ea-c626562edd3b",
			"name": "get_user_list // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "1dc5efc8-af9b-4cc4-b8ab-c7ed9da65a66",
			"name": "get_user // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/users/regular-user/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "78d72f0e-d5a6-47de-813b-d0188cd1c541",
			"name": "get_user // User",
			"url": "http://127.0.0.1:8000/api/v1/users/regular-user/",
			"time": 5,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "f0143ad6-869e-418c-95ed-6ae9436cb9a6",
			"name": "get_user // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/users/regular-user/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "16e81f65-d04c-4d27-acfc-a0e526e75a09",
			"name": "create_user // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "7bdc3f5c-1a7e-4f7c-90b9-5b7078540bb5",
			"name": "create_user // User",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "9ca9a59a-e31d-49a6-9653-6b904e26c3ee",
			"name": "create_user // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "bad3384d-940c-4924-a096-c27028b4dcb7",
			"name": "create_user_with_long_username // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "4a4dd195-58c6-46c1-8d40-ad71f2e470a6",
			"name": "create_user_with_long_email // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a42c6a9f-548a-46a1-9161-bacac9185941",
			"name": "create_user_with_long_first_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f064341f-3430-4171-90eb-1f89343a8163",
			"name": "create_user_with_long_last_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c6a10b01-87bd-4be4-aaa2-572ad63b9cef",
			"name": "create_user_with_invalid_username // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "0ea5c788-4ef7-4c1c-9e24-a1871f966107",
			"name": "patch_user_full_data // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "f4815b97-0e8a-402c-ae77-e9bd54e4371f",
			"name": "patch_user_full_data // User",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "6b42b48b-5a88-4f3d-80af-e8960f7e5612",
			"name": "patch_user_full_data // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "9b095fda-b52b-477e-8c97-017cc2604347",
			"name": "patch_user_with_empty_username // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "35b7f126-5499-467f-a4b6-14e78dc4ce84",
			"name": "patch_user_with_empty_email // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b8f97b5a-b282-4817-ad77-73af4c58dbc5",
			"name": "patch_user_with_me_as_username // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "1b648b97-3eef-4a5b-95c8-f629b1c761d6",
			"name": "patch_user_with_existing_username // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "17069910-c19c-41fa-babe-60e2674dd78c",
			"name": "patch_user_with_existing_email // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 39,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "2502148f-0c59-4547-bb8b-8cda50ae7a11",
			"name": "patch_user_with_long_email // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "2b76859a-e18e-41d4-9aca-dedb6f6fa393",
			"name": "patch_user_with_long_username // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b4338e57-8cba-40ad-a1e4-477c1efcf4b9",
			"name": "patch_user_with_long_first_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "2d54277d-64c2-43c6-95e9-279e5509bf05",
			"name": "patch_user_with_long_last_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "1449dd67-9df3-4bce-bc21-cf2675361200",
			"name": "delete_user // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 1,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "85383169-f3be-4163-b703-3c6280bac449",
			"name": "delete_user // User",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 2,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "eb080032-8f1c-463b-a59b-32b1547aa021",
			"name": "delete_user // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "e027b3fc-7c3c-40f9-b38b-0ddaec9562ce",
			"name": "get_non_existing_user // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/non_existing_user/",
			"time": 2,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "a07015bf-bd2a-4ef1-a164-7d34aa249b4e",
			"name": "patch_non_existing_user // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/non_existing_user/",
			"time": 2,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "91568507-b021-446b-9b95-3e6e861ba06e",
			"name": "delete_non_existing_user // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/non_existing_user/",
			"time": 2,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "04df889d-4c61-4d7c-9c37-9389be7a27ee",
			"name": "get_users_me // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 1,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "bf019ca9-b0c5-4ab2-b3cf-37ccc0e5c61a",
			"name": "patch_users_me_use_me_as_username // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "208e2861-7f87-4213-a29e-9a7156f8ee94",
			"name": "patch_users_me_with_invalid_username // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8eb8d692-96fc-4091-bdd5-16954285faf8",
			"name": "patch_users_me_empty_username // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 2,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "19b89fe2-891a-4ee4-adc4-3f394b00d9be",
			"name": "patch_users_me_empty_email // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 2,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d31e92ed-9389-4cb0-870d-48e5fc70a057",
			"name": "patch_users_me_with_existing_username // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "45722924-17b9-4c54-ab88-3d46a0300a6e",
			"name": "patch_users_me_with_existing_email // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 2,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "dbc79627-07dc-4ee1-9723-e48bfef9d80a",
			"name": "patch_users_me_with_long_email // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "dbafc695-4eca-45ef-916d-a2c8a218bf82",
			"name": "patch_users_me_with_long_username // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3e3a4fb5-d7e7-475f-839e-7722917f26ab",
			"name": "patch_users_me_with_long_first_name // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5a458c54-8d8e-4884-aebe-ed06bbdb0abe",
			"name": "patch_users_me_with_long_last_name // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 2,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "02ef35f8-0162-4b47-830e-f7efe3a1dc7d",
			"name": "patch_users_me_role // User",
			"url": "http://127.0.0.1:8000/api/v1/users/me/",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Изменение данных поля `role` должно быть недоступно": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Изменение данных поля `role` должно быть недоступно": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Изменение данных поля `role` должно быть недоступно": true
				}
			]
		},
		{
			"id": "b48dad0c-47a0-472d-b463-6dc830a0f517",
			"name": "update_user_by_put_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 2,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "7cdc6414-c481-402f-8bb2-145674b13bea",
			"name": "delete_first_test_user // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/username-and-email-only/",
			"time": 5,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "09e223ef-7a25-47f4-8cac-eecc48fc1356",
			"name": "delete_second_test_user // Admin",
			"url": "http://127.0.0.1:8000/api/v1/users/patched-user/",
			"time": 3,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "fe0f0fed-30ca-4de7-9e6e-15a3a142ea0b",
			"name": "delete_third_test_user // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/users/Yamd-moderator/",
			"time": 3,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "9a91c0f4-4459-468d-8798-f68857451332",
			"name": "delete__test_user // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/users/Yamd-admin/",
			"time": 3,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "b489129b-d6e0-4518-810e-9c8e4c5fcd7d",
			"name": "delete_fifth_test_user // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/users/full-data-user-by-superuser/",
			"time": 4,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "26d7f0ea-b352-41bc-992e-b0c0ad849683",
			"name": "create_category // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "f255e6a9-5bb3-4d71-9feb-8c9661b8a090",
			"name": "create_category // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "e508321e-1e07-4b43-8348-fac6c2496f2a",
			"name": "create_category // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "4c86599e-cb24-439c-8e1f-c2b20354eade",
			"name": "create_category // User",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "fb824e39-c474-44b6-80c1-64a677382a2d",
			"name": "create_category // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "54854812-3990-4874-bba3-074c8da4279a",
			"name": "create_category_with_duplicated_slug // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "745308e4-94cc-4cc0-9420-ed6bd634ca50",
			"name": "create_category_with_long_slug // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "01884ee5-96af-4cc8-86fc-16c51ee06dad",
			"name": "create_category_with_long_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "1e8559de-a2bd-42fc-816a-e3f82e2e1853",
			"name": "create_category_with_forbidden_symbols // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b567c3d8-79b2-450b-84c9-56d3358b6a61",
			"name": "update_category_by_put_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/admin-slug/",
			"time": 4,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "b48fa3ac-d5a2-4fc8-83b2-c455e8e9d52b",
			"name": "update_category_by_patch_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/admin-slug/",
			"time": 4,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "b5433bfa-845e-4433-b13c-f8191591824e",
			"name": "get_categories_list // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/categories/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "85f1204c-486a-4884-a633-2f762934fbf6",
			"name": "create_genre // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 8,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "050fc8f7-d422-4c1e-962a-d0f88a71dc4f",
			"name": "create_genre // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 5,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "4baf62d0-91b8-4f2a-aaec-eb17a848cea2",
			"name": "create_genre // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "ce8795ec-8f50-4a5d-97ce-9ceeed7c4ed5",
			"name": "create_genre // User",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "e93fc836-eee9-4d78-b4e1-f2844c3e14df",
			"name": "create_genre // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "57c7f528-1766-4ae1-80ee-55f9dc4f1820",
			"name": "create_genre_with_duplicated_slug // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a5a7e623-4bcd-4119-8439-25dd3bc64bd4",
			"name": "create_genre_with_long_slug // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c550ff32-585a-48a7-9eb1-cb4374d9fd3d",
			"name": "create_genre_with_long_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0c973509-cc93-4160-8297-81c29db54c85",
			"name": "create_genre_with_forbidden_symbols // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ad889d9c-12cc-440b-9ed6-ed0315b822c6",
			"name": "update_genre_by_put_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/admin-genre-slug/",
			"time": 5,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "84c26191-a892-420d-9f77-52411ebc2953",
			"name": "update_genre_by_patch_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/admin-genre-slug/",
			"time": 5,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "d0f74a52-1547-4be2-b0bf-be7d11986a0c",
			"name": "get_genres_list // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/genres/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "842068e0-0b9f-416d-91a4-ace4987ea631",
			"name": "create_title_with_full_data // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 31,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				31
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "d5165cf4-16dc-488c-8854-09e31b2d9df8",
			"name": "create_title_only_required_fields // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "e9ad4abf-f749-4c11-b1c0-71f2c6da4350",
			"name": "create_title_with_full_data // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"ССтатус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"ССтатус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"ССтатус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "bb63cd97-13df-40b3-9e9c-64992d87dc2b",
			"name": "get_titles_list // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "63fa24cd-f88c-48d4-89e3-ee711d496990",
			"name": "get_titles_list_filtered_by_category // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/?category=admin-slug",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "b675860c-9bcd-4d5d-b320-c54e7d3e485d",
			"name": "get_titles_list_filtered_by_genre // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/?genre=admin-genre-slug",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "43ecd939-0f5d-46e9-ac38-e615a4d2b577",
			"name": "get_titles_list_filtered_by_name // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/?name=Admin Title",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "95569406-fccf-4aca-a72d-fcb6ddb47831",
			"name": "get_titles_list_filtered_by_year // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/?year=2020",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "20d9c568-92fd-442e-8b8c-1562dedcea05",
			"name": "get_title_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "686f1ca9-131e-4773-815a-cb84ac65499c",
			"name": "update_title_full_data // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "f1bb2e2b-1946-46b6-92be-6f5b8b76204c",
			"name": "update_title_full_data // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "31c586a0-5679-4035-986a-7f607b3c2530",
			"name": "partial_update_title // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "493fea29-f3b6-443e-856a-eb2b8b19cbe4",
			"name": "create_title_without_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c480b7b4-d99e-465f-a4bb-27fbf0f3dbf6",
			"name": "create_title_without_year // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ce61bb0f-49fc-4efe-82ca-26195b921a6e",
			"name": "create_future_title // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 8,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "a1d926c0-045a-4428-a7ee-974447e726d5",
			"name": "create_title_without_genre // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "78bc4f38-48ca-47a9-aac7-a85e1d6e5d35",
			"name": "create_title_with_empty_genre // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9524c758-1a5f-47c0-a874-e22799fff506",
			"name": "create_title_with_null_genre // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ce28d803-9e67-4dd3-83da-c5fd67bc3f28",
			"name": "create_title_with_non_existing_genre // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b68c4887-d46f-4a33-8256-8e86d83b381e",
			"name": "create_title_without_category // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "49a5ff3d-212f-4db1-9052-00cd45635dc5",
			"name": "create_title_with_non_existing_category // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "167b9e2c-ceb7-4d6c-a68e-4bd358cab4ab",
			"name": "create_title // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "ccc7aea8-8feb-48b0-a28a-d81cdc92cc1f",
			"name": "create_title // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "74fd3803-2ded-470f-bc7e-bb07c21ae069",
			"name": "create_title // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "8aa10a6d-a0b5-4f6d-b3af-a521cc6f0848",
			"name": "update_title_empty_name // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "451726a7-919f-4419-b4a3-3e1993c4e7eb",
			"name": "update_title_invalid_year // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "888d76e5-575e-450a-bcb3-6b771dbb56a9",
			"name": "update_title_invalid_category // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6e1d8d5f-edda-4cf3-9cc4-e4e00d5cedfc",
			"name": "update_title_invalid_genre // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c75ec0b7-ee9f-486c-ab7c-165f809d47ee",
			"name": "update_title // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "9eb1fcbf-0c36-489c-b523-731b4ac85794",
			"name": "update_title // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 5,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "f852b6a1-b3f9-422c-8ef0-326464c795a5",
			"name": "update_title // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "7650f4af-34e6-4992-b9c4-5bdc522c00b9",
			"name": "get_non_existing_title // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/thisTitleDoesNotExists/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "df507d44-4855-4db5-9744-06f8a6d37fba",
			"name": "update_non_existing_title // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/thisTitleDoesNotExists/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "ed6ce2ff-9f09-47ee-a85e-af090b6d98b0",
			"name": "delete_non_existing_title // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/thisTitleDoesNotExists/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "9f406390-dc77-4dc7-8c6f-da4a61d30fe2",
			"name": "update_title_by_put_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 3,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "3f826bba-f298-44dc-8445-59e109e81cb8",
			"name": "create_review // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/",
			"time": 7,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "4b3830ba-65d7-459b-a5de-e51d4eea1dea",
			"name": "create_review // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/",
			"time": 7,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "8af603b5-6096-446f-9d63-7da9e7bf678f",
			"name": "create_review // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "2396ad49-2d47-4536-87fe-92e3e6c6a054",
			"name": "create_review // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "df28d468-c206-4814-b9bf-58fe9d688239",
			"name": "get_title_with_rating // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Значение поля `rating` должно соответствовать ожидаемому": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Значение поля `rating` должно соответствовать ожидаемому": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Значение поля `rating` должно соответствовать ожидаемому": true
				}
			]
		},
		{
			"id": "dc5064b0-a33d-4a34-a7a8-3b8ff13e50b6",
			"name": "update_title_to_check_rating_in_response // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Значение поля `rating` должно соответствовать ожидаемому": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Значение поля `rating` должно соответствовать ожидаемому": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Значение поля `rating` должно соответствовать ожидаемому": true
				}
			]
		},
		{
			"id": "21a57002-ca6f-46ef-b79a-c7322a0157de",
			"name": "get_reviews_list // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "91b1992f-ba4b-4209-876a-97735c0e2bc0",
			"name": "get_review_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "6552b751-654f-4f2b-bd5e-929e03d1a145",
			"name": "update_review // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "7d806895-9695-40eb-b356-84938605f67e",
			"name": "update_only_score // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "384e58fe-9490-4909-b489-46ab1f6fc8c1",
			"name": "update_only_text // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "130ae2b2-de06-4738-8042-7e4ecf68ab56",
			"name": "update_review // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "7417197a-779e-4061-96c5-340428261df0",
			"name": "update_review // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "76f1480d-bdae-44a8-b786-b46d481936f7",
			"name": "update_review // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "efd8c511-9253-47a7-bcac-e37c92b978ea",
			"name": "create_review_without_score_field // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "28d926b6-a116-4117-9b34-a6cce8f16a44",
			"name": "create_review_with_zero_score // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "15187c2c-c555-46f7-a7e6-993384f2bc99",
			"name": "create_review_with_too_high_score // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "49972438-e1ca-4fd1-9ab5-1562445bd0e3",
			"name": "create_review_without_text // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b5312e05-22c3-44ea-9c12-f3f88293310e",
			"name": "create_review_with_empty_text // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "beb47020-34dd-4bfc-a5f0-9d91c0d80409",
			"name": "create_review // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "e2202246-0eab-41df-b097-2aa8cc9e5d84",
			"name": "create_second_review_on_same_title // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0eb94b7b-5f64-4c9d-ae54-3fdc100a3fb2",
			"name": "update_review_with_zero_score // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "74225cfd-3bc6-4e83-ad96-7c15e7e16eb2",
			"name": "update_review_with_too_high_score // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "00daeb4e-1c31-4896-8440-44fbb78ba2c8",
			"name": "update_review_with_empty_text // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c4a41129-58bd-4f1d-8839-ee83988cf460",
			"name": "update_foreign_review // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/",
			"time": 6,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "bc741541-512f-444f-95f8-74fac9bcfdf5",
			"name": "update_review // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "8e7c80f1-8415-4ebd-bb77-5452bc2295b2",
			"name": "update_review_by_put_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/",
			"time": 4,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "0ad018a7-ee32-4002-a8b8-b93e6be5a7ac",
			"name": "create_review_for_non_existing_title // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/99999/reviews/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "9cd1026f-936c-415d-b8da-6d3c94067a46",
			"name": "get_non_existing_review // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/77777/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "140fe835-2c37-40b4-8e1f-c271bfacddef",
			"name": "get_review_with_wrong_title_id // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/4/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "d216661c-e245-4533-b87b-7189025bf038",
			"name": "update_non_existing_review // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/99999/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "6eec4c58-145d-414a-a67e-ceac60f26d02",
			"name": "update_review_with_wrong_title_id // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/4/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "1d4d6571-22e5-4158-bf68-da4efcb78e26",
			"name": "delete_non_existing_review // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/77777/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "46a8e2bd-eb34-4dd9-93c1-59a63960f797",
			"name": "create_comment // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/comments/",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "3c32f3d8-7c98-4657-ba67-00663b92cde9",
			"name": "create_comment // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/comments/",
			"time": 7,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "78f3c349-a143-4700-94a9-262731feb81d",
			"name": "create_comment // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "33aca3e8-060f-4c41-9c0d-24a10d7dce2f",
			"name": "create_comment // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "322a5d33-93b9-4dab-a54c-499fa1563540",
			"name": "get_comments_list // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "f491dd64-2c1f-4afc-90ff-502b8296de9e",
			"name": "get_comment_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "8dfe0111-08ef-4c85-b13d-a8f95a5b065b",
			"name": "update_comment_by_author // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/comments/1/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "78d9175e-bd51-457d-8e3d-ebd0e99020ca",
			"name": "update_comment // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/4/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "851cb18f-1bf1-4b3f-b274-821e0999dcef",
			"name": "update_comment // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/4/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "17cd4410-3d9e-434d-90af-e81bf4a44574",
			"name": "update_comment // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Данные в ответе должны совпадать с данными в запросе": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Данные в ответе должны совпадать с данными в запросе": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Данные в ответе должны совпадать с данными в запросе": true
				}
			]
		},
		{
			"id": "33144999-fd47-405a-a1fe-9cf43f6db792",
			"name": "create_comment_with_empty_text // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/comments/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5c020b74-aadd-4602-8043-6cdda0838a5d",
			"name": "create_comment_without_text_field // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/comments/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "10675a77-617d-445a-801d-ecaad128deb9",
			"name": "create_comment // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/comments/",
			"time": 6,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "3540ce29-9df8-4be2-9957-67450f8f866f",
			"name": "update_comment_with_empty_text // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/4/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9fc4e082-bb3e-430f-9356-98eb21516ee5",
			"name": "update_foreign_comment // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 6,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "b3234792-4849-4c1b-b7d1-7dfb1045e80c",
			"name": "update_comment // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "6aea6975-1e67-478c-a1b4-4cfb43e84dd4",
			"name": "update_comment_by_put_request // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 4,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "1636d9cb-fe61-40ce-8a60-b053fee1d075",
			"name": "create_comment_with_wrong_ids_in_url // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/4/comments/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "a4521661-161a-4d12-8f06-7e86e7868a24",
			"name": "get_non_existing_comment // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/99999/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "6ccf70da-8032-4d4b-981e-f65879bc3eec",
			"name": "get_comment_with_wrong_title_id // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/3/comments/4/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "2c61f668-a65f-4c0a-bf8f-0272074c0a6a",
			"name": "get_comment_with_wrong_review_id // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/1/comments/4/",
			"time": 2,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "a8a87aa4-ae1e-4d9b-877b-4b2574fe9cd6",
			"name": "update_comment_with_wrong_title_id // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/3/comments/4/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "b93eb5e0-a133-45d2-9e06-0587590bf8ac",
			"name": "update_comment_with_wrong_review_id // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/1/comments/4/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "f63594b3-b5e1-4505-99c5-2ac57ff75415",
			"name": "update_non_existing_comment // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/99999/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "123e36fa-e1c8-46c4-b55f-c368767ca76d",
			"name": "delete_non_existing_comment // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/99999/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "fca852ca-cca2-4b6b-ad02-f7eb68701764",
			"name": "delete_comment_with_wrong_title_id // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/3/comments/4/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "9f016a30-074c-4480-9bd9-0a904c5f2860",
			"name": "delete_comment_with_wrong_review_id // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/1/comments/4/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "fd7e378b-b14a-49c4-ade1-c2c4601cf2f6",
			"name": "delete_foreign_comment // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "e4cfd7fc-e13d-4eba-a829-23a777782bd8",
			"name": "delete_comment // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "177c5aae-f6df-439f-be59-31b09340371c",
			"name": "delete_comment_by_author // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/comments/1/",
			"time": 7,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "22438f81-e615-4c34-b235-553e99597598",
			"name": "delete_comment // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/3/",
			"time": 6,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "5e852c86-2e3e-4018-8ba0-5a977d60c7cc",
			"name": "delete_comment // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/comments/4/",
			"time": 6,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "50a215a5-74b3-421f-8e61-dabe670a9452",
			"name": "delete_comment // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/comments/2/",
			"time": 6,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "46d57b75-f2c1-4c07-ad9c-f3ed0628d5f0",
			"name": "delete_review_with_wrong_title_id // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/4/",
			"time": 7,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "4b7031e8-4ba6-4175-bd6b-3b3b19bb5196",
			"name": "delete_foreign_review // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/",
			"time": 5,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "59bd3831-a034-4b13-9f32-b57a597c3ae6",
			"name": "delete_review // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "f9da28ef-452c-4071-a841-1aa073a5b944",
			"name": "delete_review_by_author // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/1/",
			"time": 7,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "c6cd44d3-3015-481d-88f4-25ab602cc436",
			"name": "delete_review // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/reviews/2/",
			"time": 8,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "63b72763-222f-4b0d-819e-0d15e3ab4819",
			"name": "delete_review // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/4/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "615a126a-cba1-497b-a657-f107cd9060d6",
			"name": "delete_review // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/reviews/3/",
			"time": 7,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "fa9f5a6a-edaf-4464-925b-27252b7942e2",
			"name": "delete_title // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 2,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "e0228eb0-ff61-4ef9-97fa-b3ae2ae1f728",
			"name": "delete_title // User",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 5,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "58977ba3-f553-4fe1-90fc-84c11ed5e516",
			"name": "delete_title // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "7f9d049a-1d50-40fc-9618-6306290807a0",
			"name": "delete_title // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 7,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "6ec0e2c0-3f96-482e-88af-be8e223e15e4",
			"name": "delete_title // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/1/",
			"time": 7,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "1734b7bc-fe2e-43d1-8a02-18f0c64be066",
			"name": "delete_short_title // Admin",
			"url": "http://127.0.0.1:8000/api/v1/titles/2/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "d7e7fa9f-a81e-43e8-9d97-4eba0431ec99",
			"name": "delete_admin_category // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/categories/admin-slug/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "0057385d-f3eb-478b-92c8-29bd5d130dd3",
			"name": "delete_admin_category // User",
			"url": "http://127.0.0.1:8000/api/v1/categories/admin-slug/",
			"time": 5,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "c813e1ce-c68f-4f4a-9d71-410775b095c3",
			"name": "delete_admin_category // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/categories/admin-slug/",
			"time": 5,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "2a009cf5-9b9a-4d1c-8f06-55383a6472c9",
			"name": "delete_non_existent_category // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/category-does-not-exists/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "022fa004-d80b-4ced-9463-41d1d1da10a6",
			"name": "delete_admin_category // Admin",
			"url": "http://127.0.0.1:8000/api/v1/categories/admin-slug/",
			"time": 6,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "b967fc91-de64-47d9-b166-1443a4c7db8d",
			"name": "delete_superuser_category // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/categories/superuser-slug/",
			"time": 7,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "e3e96661-3076-4a5d-a07a-48d47eb44969",
			"name": "delete_admin_genre // No Auth",
			"url": "http://127.0.0.1:8000/api/v1/genres/admin-genre-slug/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "3eb1142a-4d6e-4dfe-a637-90feac7b482f",
			"name": "delete_admin_genre // User",
			"url": "http://127.0.0.1:8000/api/v1/genres/admin-genre-slug/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "11332c53-2706-4356-a4d6-7869e687726d",
			"name": "delete_admin_genre // Moderator",
			"url": "http://127.0.0.1:8000/api/v1/genres/admin-genre-slug/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "b3b286a6-11fe-48ff-a52e-771f2231f014",
			"name": "delete_non_existent_genre // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/genre-does-not-exists/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "eb6ac686-8399-43c5-a130-9bde5f405c84",
			"name": "delete_admin_category // Admin",
			"url": "http://127.0.0.1:8000/api/v1/genres/admin-genre-slug/",
			"time": 6,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "98da529d-2b84-4954-9d2f-26175ec56cb1",
			"name": "delete_superuser_genre // Superuser",
			"url": "http://127.0.0.1:8000/api/v1/genres/superuser-genre-slug/",
			"time": 5,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 1167,
	"collection": {
		"requests": [
			{
				"id": "1c1db09d-15e5-49cc-b7fe-de4b11fe4af1",
				"method": "POST"
			},
			{
				"id": "c5cef2f1-a6f8-4f1a-80d3-d1a943894054",
				"method": "POST"
			},
			{
				"id": "293c5988-dd0a-46f4-8413-8d19423b95db",
				"method": "POST"
			},
			{
				"id": "a6643dc7-d2e1-4f79-a4ef-1a33e784e91b",
				"method": "POST"
			},
			{
				"id": "dddd4c2a-5fc3-4039-8608-018a10f71c83",
				"method": "POST"
			},
			{
				"id": "7ec4ed3d-1d0f-476e-98a8-1df985cfa64b",
				"method": "POST"
			},
			{
				"id": "e8c90bce-23e9-4602-a845-cd25e14e8454",
				"method": "POST"
			},
			{
				"id": "0a33ba18-7cec-4194-9820-b4ac33c5f51d",
				"method": "POST"
			},
			{
				"id": "7d6bdbb6-e113-42e3-90d7-11a2cfc9f266",
				"method": "POST"
			},
			{
				"id": "c7017d29-ea29-48f4-8bd9-e14ed0ddb672",
				"method": "POST"
			},
			{
				"id": "e0ff608d-cf86-4714-bc60-d21674cd8e61",
				"method": "POST"
			},
			{
				"id": "3fb952fa-0936-4848-80ac-20ada1e14736",
				"method": "GET"
			},
			{
				"id": "29da45b9-8511-4fb7-9b00-3e87e3108dbb",
				"method": "GET"
			},
			{
				"id": "019d46a6-aead-436c-a4e8-48fdc393af82",
				"method": "GET"
			},
			{
				"id": "99a1f9af-34a0-404d-9095-9bc5f7ce0889",
				"method": "GET"
			},
			{
				"id": "4ff30648-3bd7-47c3-b067-3149e2845833",
				"method": "GET"
			},
			{
				"id": "1a6fa9c6-b5a1-40f1-93ca-0cca932b6691",
				"method": "POST"
			},
			{
				"id": "38f164e4-2e87-42a2-b851-aac776b995a9",
				"method": "POST"
			},
			{
				"id": "a2091c7b-2687-4070-8a63-a80ab2f1a711",
				"method": "POST"
			},
			{
				"id": "fdaa0230-5a82-4163-aa69-c74da05ab22a",
				"method": "POST"
			},
			{
				"id": "8bd18e8d-122c-4bb2-ab9e-5b6eb2f390e8",
				"method": "POST"
			},
			{
				"id": "02c0b1ec-568d-40ad-b465-e07a5e908448",
				"method": "PATCH"
			},
			{
				"id": "1a13db64-0b64-4fef-a4a9-3ab172ac80c7",
				"method": "PATCH"
			},
			{
				"id": "3d47e8de-e29a-4b68-804a-ff73245508b9",
				"method": "GET"
			},
			{
				"id": "97c9d8a3-1c7c-41c6-b7cc-0771af6d3666",
				"method": "PATCH"
			},
			{
				"id": "64b12f01-ffa9-4fe9-894e-f8ef214b0952",
				"method": "PATCH"
			},
			{
				"id": "ddfc26ba-0cfc-4f27-b4c7-774540027221",
				"method": "PATCH"
			},
			{
				"id": "e9965d8e-b0e5-43bd-ac23-e45670b572be",
				"method": "GET"
			},
			{
				"id": "257e9408-7571-49d0-93a3-08d69445d5dc",
				"method": "GET"
			},
			{
				"id": "c8b614db-869e-4903-88ea-c626562edd3b",
				"method": "GET"
			},
			{
				"id": "1dc5efc8-af9b-4cc4-b8ab-c7ed9da65a66",
				"method": "GET"
			},
			{
				"id": "78d72f0e-d5a6-47de-813b-d0188cd1c541",
				"method": "GET"
			},
			{
				"id": "f0143ad6-869e-418c-95ed-6ae9436cb9a6",
				"method": "GET"
			},
			{
				"id": "16e81f65-d04c-4d27-acfc-a0e526e75a09",
				"method": "POST"
			},
			{
				"id": "7bdc3f5c-1a7e-4f7c-90b9-5b7078540bb5",
				"method": "POST"
			},
			{
				"id": "9ca9a59a-e31d-49a6-9653-6b904e26c3ee",
				"method": "POST"
			},
			{
				"id": "bad3384d-940c-4924-a096-c27028b4dcb7",
				"method": "POST"
			},
			{
				"id": "4a4dd195-58c6-46c1-8d40-ad71f2e470a6",
				"method": "POST"
			},
			{
				"id": "a42c6a9f-548a-46a1-9161-bacac9185941",
				"method": "POST"
			},
			{
				"id": "f064341f-3430-4171-90eb-1f89343a8163",
				"method": "POST"
			},
			{
				"id": "c6a10b01-87bd-4be4-aaa2-572ad63b9cef",
				"method": "POST"
			},
			{
				"id": "0ea5c788-4ef7-4c1c-9e24-a1871f966107",
				"method": "PATCH"
			},
			{
				"id": "f4815b97-0e8a-402c-ae77-e9bd54e4371f",
				"method": "PATCH"
			},
			{
				"id": "6b42b48b-5a88-4f3d-80af-e8960f7e5612",
				"method": "PATCH"
			},
			{
				"id": "9b095fda-b52b-477e-8c97-017cc2604347",
				"method": "PATCH"
			},
			{
				"id": "35b7f126-5499-467f-a4b6-14e78dc4ce84",
				"method": "PATCH"
			},
			{
				"id": "b8f97b5a-b282-4817-ad77-73af4c58dbc5",
				"method": "PATCH"
			},
			{
				"id": "1b648b97-3eef-4a5b-95c8-f629b1c761d6",
				"method": "PATCH"
			},
			{
				"id": "17069910-c19c-41fa-babe-60e2674dd78c",
				"method": "PATCH"
			},
			{
				"id": "2502148f-0c59-4547-bb8b-8cda50ae7a11",
				"method": "PATCH"
			},
			{
				"id": "2b76859a-e18e-41d4-9aca-dedb6f6fa393",
				"method": "PATCH"
			},
			{
				"id": "b4338e57-8cba-40ad-a1e4-477c1efcf4b9",
				"method": "PATCH"
			},
			{
				"id": "2d54277d-64c2-43c6-95e9-279e5509bf05",
				"method": "PATCH"
			},
			{
				"id": "1449dd67-9df3-4bce-bc21-cf2675361200",
				"method": "DELETE"
			},
			{
				"id": "85383169-f3be-4163-b703-3c6280bac449",
				"method": "DELETE"
			},
			{
				"id": "eb080032-8f1c-463b-a59b-32b1547aa021",
				"method": "DELETE"
			},
			{
				"id": "e027b3fc-7c3c-40f9-b38b-0ddaec9562ce",
				"method": "GET"
			},
			{
				"id": "a07015bf-bd2a-4ef1-a164-7d34aa249b4e",
				"method": "PATCH"
			},
			{
				"id": "91568507-b021-446b-9b95-3e6e861ba06e",
				"method": "DELETE"
			},
			{
				"id": "04df889d-4c61-4d7c-9c37-9389be7a27ee",
				"method": "GET"
			},
			{
				"id": "bf019ca9-b0c5-4ab2-b3cf-37ccc0e5c61a",
				"method": "PATCH"
			},
			{
				"id": "208e2861-7f87-4213-a29e-9a7156f8ee94",
				"method": "PATCH"
			},
			{
				"id": "8eb8d692-96fc-4091-bdd5-16954285faf8",
				"method": "PATCH"
			},
			{
				"id": "19b89fe2-891a-4ee4-adc4-3f394b00d9be",
				"method": "PATCH"
			},
			{
				"id": "d31e92ed-9389-4cb0-870d-48e5fc70a057",
				"method": "PATCH"
			},
			{
				"id": "45722924-17b9-4c54-ab88-3d46a0300a6e",
				"method": "PATCH"
			},
			{
				"id": "dbc79627-07dc-4ee1-9723-e48bfef9d80a",
				"method": "PATCH"
			},
			{
				"id": "dbafc695-4eca-45ef-916d-a2c8a218bf82",
				"method": "PATCH"
			},
			{
				"id": "3e3a4fb5-d7e7-475f-839e-7722917f26ab",
				"method": "PATCH"
			},
			{
				"id": "5a458c54-8d8e-4884-aebe-ed06bbdb0abe",
				"method": "PATCH"
			},
			{
				"id": "02ef35f8-0162-4b47-830e-f7efe3a1dc7d",
				"method": "PATCH"
			},
			{
				"id": "b48dad0c-47a0-472d-b463-6dc830a0f517",
				"method": "PUT"
			},
			{
				"id": "7cdc6414-c481-402f-8bb2-145674b13bea",
				"method": "DELETE"
			},
			{
				"id": "09e223ef-7a25-47f4-8cac-eecc48fc1356",
				"method": "DELETE"
			},
			{
				"id": "fe0f0fed-30ca-4de7-9e6e-15a3a142ea0b",
				"method": "DELETE"
			},
			{
				"id": "9a91c0f4-4459-468d-8798-f68857451332",
				"method": "DELETE"
			},
			{
				"id": "b489129b-d6e0-4518-810e-9c8e4c5fcd7d",
				"method": "DELETE"
			},
			{
				"id": "26d7f0ea-b352-41bc-992e-b0c0ad849683",
				"method": "POST"
			},
			{
				"id": "f255e6a9-5bb3-4d71-9feb-8c9661b8a090",
				"method": "POST"
			},
			{
				"id": "e508321e-1e07-4b43-8348-fac6c2496f2a",
				"method": "POST"
			},
			{
				"id": "4c86599e-cb24-439c-8e1f-c2b20354eade",
				"method": "POST"
			},
			{
				"id": "fb824e39-c474-44b6-80c1-64a677382a2d",
				"method": "POST"
			},
			{
				"id": "54854812-3990-4874-bba3-074c8da4279a",
				"method": "POST"
			},
			{
				"id": "745308e4-94cc-4cc0-9420-ed6bd634ca50",
				"method": "POST"
			},
			{
				"id": "01884ee5-96af-4cc8-86fc-16c51ee06dad",
				"method": "POST"
			},
			{
				"id": "1e8559de-a2bd-42fc-816a-e3f82e2e1853",
				"method": "POST"
			},
			{
				"id": "b567c3d8-79b2-450b-84c9-56d3358b6a61",
				"method": "PUT"
			},
			{
				"id": "b48fa3ac-d5a2-4fc8-83b2-c455e8e9d52b",
				"method": "PATCH"
			},
			{
				"id": "b5433bfa-845e-4433-b13c-f8191591824e",
				"method": "GET"
			},
			{
				"id": "85f1204c-486a-4884-a633-2f762934fbf6",
				"method": "POST"
			},
			{
				"id": "050fc8f7-d422-4c1e-962a-d0f88a71dc4f",
				"method": "POST"
			},
			{
				"id": "4baf62d0-91b8-4f2a-aaec-eb17a848cea2",
				"method": "POST"
			},
			{
				"id": "ce8795ec-8f50-4a5d-97ce-9ceeed7c4ed5",
				"method": "POST"
			},
			{
				"id": "e93fc836-eee9-4d78-b4e1-f2844c3e14df",
				"method": "POST"
			},
			{
				"id": "57c7f528-1766-4ae1-80ee-55f9dc4f1820",
				"method": "POST"
			},
			{
				"id": "a5a7e623-4bcd-4119-8439-25dd3bc64bd4",
				"method": "POST"
			},
			{
				"id": "c550ff32-585a-48a7-9eb1-cb4374d9fd3d",
				"method": "POST"
			},
			{
				"id": "0c973509-cc93-4160-8297-81c29db54c85",
				"method": "POST"
			},
			{
				"id": "ad889d9c-12cc-440b-9ed6-ed0315b822c6",
				"method": "PUT"
			},
			{
				"id": "84c26191-a892-420d-9f77-52411ebc2953",
				"method": "PATCH"
			},
			{
				"id": "d0f74a52-1547-4be2-b0bf-be7d11986a0c",
				"method": "GET"
			},
			{
				"id": "842068e0-0b9f-416d-91a4-ace4987ea631",
				"method": "POST"
			},
			{
				"id": "d5165cf4-16dc-488c-8854-09e31b2d9df8",
				"method": "POST"
			},
			{
				"id": "e9ad4abf-f749-4c11-b1c0-71f2c6da4350",
				"method": "POST"
			},
			{
				"id": "bb63cd97-13df-40b3-9e9c-64992d87dc2b",
				"method": "GET"
			},
			{
				"id": "63fa24cd-f88c-48d4-89e3-ee711d496990",
				"method": "GET"
			},
			{
				"id": "b675860c-9bcd-4d5d-b320-c54e7d3e485d",
				"method": "GET"
			},
			{
				"id": "43ecd939-0f5d-46e9-ac38-e615a4d2b577",
				"method": "GET"
			},
			{
				"id": "95569406-fccf-4aca-a72d-fcb6ddb47831",
				"method": "GET"
			},
			{
				"id": "20d9c568-92fd-442e-8b8c-1562dedcea05",
				"method": "GET"
			},
			{
				"id": "686f1ca9-131e-4773-815a-cb84ac65499c",
				"method": "PATCH"
			},
			{
				"id": "f1bb2e2b-1946-46b6-92be-6f5b8b76204c",
				"method": "PATCH"
			},
			{
				"id": "31c586a0-5679-4035-986a-7f607b3c2530",
				"method": "PATCH"
			},
			{
				"id": "493fea29-f3b6-443e-856a-eb2b8b19cbe4",
				"method": "POST"
			},
			{
				"id": "c480b7b4-d99e-465f-a4bb-27fbf0f3dbf6",
				"method": "POST"
			},
			{
				"id": "ce61bb0f-49fc-4efe-82ca-26195b921a6e",
				"method": "POST"
			},
			{
				"id": "a1d926c0-045a-4428-a7ee-974447e726d5",
				"method": "POST"
			},
			{
				"id": "78bc4f38-48ca-47a9-aac7-a85e1d6e5d35",
				"method": "POST"
			},
			{
				"id": "9524c758-1a5f-47c0-a874-e22799fff506",
				"method": "POST"
			},
			{
				"id": "ce28d803-9e67-4dd3-83da-c5fd67bc3f28",
				"method": "POST"
			},
			{
				"id": "b68c4887-d46f-4a33-8256-8e86d83b381e",
				"method": "POST"
			},
			{
				"id": "49a5ff3d-212f-4db1-9052-00cd45635dc5",
				"method": "POST"
			},
			{
				"id": "167b9e2c-ceb7-4d6c-a68e-4bd358cab4ab",
				"method": "POST"
			},
			{
				"id": "ccc7aea8-8feb-48b0-a28a-d81cdc92cc1f",
				"method": "POST"
			},
			{
				"id": "74fd3803-2ded-470f-bc7e-bb07c21ae069",
				"method": "POST"
			},
			{
				"id": "8aa10a6d-a0b5-4f6d-b3af-a521cc6f0848",
				"method": "PATCH"
			},
			{
				"id": "451726a7-919f-4419-b4a3-3e1993c4e7eb",
				"method": "PATCH"
			},
			{
				"id": "888d76e5-575e-450a-bcb3-6b771dbb56a9",
				"method": "PATCH"
			},
			{
				"id": "6e1d8d5f-edda-4cf3-9cc4-e4e00d5cedfc",
				"method": "PATCH"
			},
			{
				"id": "c75ec0b7-ee9f-486c-ab7c-165f809d47ee",
				"method": "PATCH"
			},
			{
				"id": "9eb1fcbf-0c36-489c-b523-731b4ac85794",
				"method": "PATCH"
			},
			{
				"id": "f852b6a1-b3f9-422c-8ef0-326464c795a5",
				"method": "PATCH"
			},
			{
				"id": "7650f4af-34e6-4992-b9c4-5bdc522c00b9",
				"method": "GET"
			},
			{
				"id": "df507d44-4855-4db5-9744-06f8a6d37fba",
				"method": "PATCH"
			},
			{
				"id": "ed6ce2ff-9f09-47ee-a85e-af090b6d98b0",
				"method": "DELETE"
			},
			{
				"id": "9f406390-dc77-4dc7-8c6f-da4a61d30fe2",
				"method": "PUT"
			},
			{
				"id": "3f826bba-f298-44dc-8445-59e109e81cb8",
				"method": "POST"
			},
			{
				"id": "4b3830ba-65d7-459b-a5de-e51d4eea1dea",
				"method": "POST"
			},
			{
				"id": "8af603b5-6096-446f-9d63-7da9e7bf678f",
				"method": "POST"
			},
			{
				"id": "2396ad49-2d47-4536-87fe-92e3e6c6a054",
				"method": "POST"
			},
			{
				"id": "df28d468-c206-4814-b9bf-58fe9d688239",
				"method": "GET"
			},
			{
				"id": "dc5064b0-a33d-4a34-a7a8-3b8ff13e50b6",
				"method": "PATCH"
			},
			{
				"id": "21a57002-ca6f-46ef-b79a-c7322a0157de",
				"method": "GET"
			},
			{
				"id": "91b1992f-ba4b-4209-876a-97735c0e2bc0",
				"method": "GET"
			},
			{
				"id": "6552b751-654f-4f2b-bd5e-929e03d1a145",
				"method": "PATCH"
			},
			{
				"id": "7d806895-9695-40eb-b356-84938605f67e",
				"method": "PATCH"
			},
			{
				"id": "384e58fe-9490-4909-b489-46ab1f6fc8c1",
				"method": "PATCH"
			},
			{
				"id": "130ae2b2-de06-4738-8042-7e4ecf68ab56",
				"method": "PATCH"
			},
			{
				"id": "7417197a-779e-4061-96c5-340428261df0",
				"method": "PATCH"
			},
			{
				"id": "76f1480d-bdae-44a8-b786-b46d481936f7",
				"method": "PATCH"
			},
			{
				"id": "efd8c511-9253-47a7-bcac-e37c92b978ea",
				"method": "POST"
			},
			{
				"id": "28d926b6-a116-4117-9b34-a6cce8f16a44",
				"method": "POST"
			},
			{
				"id": "15187c2c-c555-46f7-a7e6-993384f2bc99",
				"method": "POST"
			},
			{
				"id": "49972438-e1ca-4fd1-9ab5-1562445bd0e3",
				"method": "POST"
			},
			{
				"id": "b5312e05-22c3-44ea-9c12-f3f88293310e",
				"method": "POST"
			},
			{
				"id": "beb47020-34dd-4bfc-a5f0-9d91c0d80409",
				"method": "POST"
			},
			{
				"id": "e2202246-0eab-41df-b097-2aa8cc9e5d84",
				"method": "POST"
			},
			{
				"id": "0eb94b7b-5f64-4c9d-ae54-3fdc100a3fb2",
				"method": "PATCH"
			},
			{
				"id": "74225cfd-3bc6-4e83-ad96-7c15e7e16eb2",
				"method": "PATCH"
			},
			{
				"id": "00daeb4e-1c31-4896-8440-44fbb78ba2c8",
				"method": "PATCH"
			},
			{
				"id": "c4a41129-58bd-4f1d-8839-ee83988cf460",
				"method": "PATCH"
			},
			{
				"id": "bc741541-512f-444f-95f8-74fac9bcfdf5",
				"method": "PATCH"
			},
			{
				"id": "8e7c80f1-8415-4ebd-bb77-5452bc2295b2",
				"method": "PUT"
			},
			{
				"id": "0ad018a7-ee32-4002-a8b8-b93e6be5a7ac",
				"method": "POST"
			},
			{
				"id": "9cd1026f-936c-415d-b8da-6d3c94067a46",
				"method": "GET"
			},
			{
				"id": "140fe835-2c37-40b4-8e1f-c271bfacddef",
				"method": "GET"
			},
			{
				"id": "d216661c-e245-4533-b87b-7189025bf038",
				"method": "PATCH"
			},
			{
				"id": "6eec4c58-145d-414a-a67e-ceac60f26d02",
				"method": "PATCH"
			},
			{
				"id": "1d4d6571-22e5-4158-bf68-da4efcb78e26",
				"method": "DELETE"
			},
			{
				"id": "46a8e2bd-eb34-4dd9-93c1-59a63960f797",
				"method": "POST"
			},
			{
				"id": "3c32f3d8-7c98-4657-ba67-00663b92cde9",
				"method": "POST"
			},
			{
				"id": "78f3c349-a143-4700-94a9-262731feb81d",
				"method": "POST"
			},
			{
				"id": "33aca3e8-060f-4c41-9c0d-24a10d7dce2f",
				"method": "POST"
			},
			{
				"id": "322a5d33-93b9-4dab-a54c-499fa1563540",
				"method": "GET"
			},
			{
				"id": "f491dd64-2c1f-4afc-90ff-502b8296de9e",
				"method": "GET"
			},
			{
				"id": "8dfe0111-08ef-4c85-b13d-a8f95a5b065b",
				"method": "PATCH"
			},
			{
				"id": "78d9175e-bd51-457d-8e3d-ebd0e99020ca",
				"method": "PATCH"
			},
			{
				"id": "851cb18f-1bf1-4b3f-b274-821e0999dcef",
				"method": "PATCH"
			},
			{
				"id": "17cd4410-3d9e-434d-90af-e81bf4a44574",
				"method": "PATCH"
			},
			{
				"id": "33144999-fd47-405a-a1fe-9cf43f6db792",
				"method": "POST"
			},
			{
				"id": "5c020b74-aadd-4602-8043-6cdda0838a5d",
				"method": "POST"
			},
			{
				"id": "10675a77-617d-445a-801d-ecaad128deb9",
				"method": "POST"
			},
			{
				"id": "3540ce29-9df8-4be2-9957-67450f8f866f",
				"method": "PATCH"
			},
			{
				"id": "9fc4e082-bb3e-430f-9356-98eb21516ee5",
				"method": "PATCH"
			},
			{
				"id": "b3234792-4849-4c1b-b7d1-7dfb1045e80c",
				"method": "PATCH"
			},
			{
				"id": "6aea6975-1e67-478c-a1b4-4cfb43e84dd4",
				"method": "PUT"
			},
			{
				"id": "1636d9cb-fe61-40ce-8a60-b053fee1d075",
				"method": "POST"
			},
			{
				"id": "a4521661-161a-4d12-8f06-7e86e7868a24",
				"method": "GET"
			},
			{
				"id": "6ccf70da-8032-4d4b-981e-f65879bc3eec",
				"method": "GET"
			},
			{
				"id": "2c61f668-a65f-4c0a-bf8f-0272074c0a6a",
				"method": "GET"
			},
			{
				"id": "a8a87aa4-ae1e-4d9b-877b-4b2574fe9cd6",
				"method": "PATCH"
			},
			{
				"id": "b93eb5e0-a133-45d2-9e06-0587590bf8ac",
				"method": "PATCH"
			},
			{
				"id": "f63594b3-b5e1-4505-99c5-2ac57ff75415",
				"method": "PATCH"
			},
			{
				"id": "123e36fa-e1c8-46c4-b55f-c368767ca76d",
				"method": "DELETE"
			},
			{
				"id": "fca852ca-cca2-4b6b-ad02-f7eb68701764",
				"method": "DELETE"
			},
			{
				"id": "9f016a30-074c-4480-9bd9-0a904c5f2860",
				"method": "DELETE"
			},
			{
				"id": "fd7e378b-b14a-49c4-ade1-c2c4601cf2f6",
				"method": "DELETE"
			},
			{
				"id": "e4cfd7fc-e13d-4eba-a829-23a777782bd8",
				"method": "DELETE"
			},
			{
				"id": "177c5aae-f6df-439f-be59-31b09340371c",
				"method": "DELETE"
			},
			{
				"id": "22438f81-e615-4c34-b235-553e99597598",
				"method": "DELETE"
			},
			{
				"id": "5e852c86-2e3e-4018-8ba0-5a977d60c7cc",
				"method": "DELETE"
			},
			{
				"id": "50a215a5-74b3-421f-8e61-dabe670a9452",
				"method": "DELETE"
			},
			{
				"id": "46d57b75-f2c1-4c07-ad9c-f3ed0628d5f0",
				"method": "DELETE"
			},
			{
				"id": "4b7031e8-4ba6-4175-bd6b-3b3b19bb5196",
				"method": "DELETE"
			},
			{
				"id": "59bd3831-a034-4b13-9f32-b57a597c3ae6",
				"method": "DELETE"
			},
			{
				"id": "f9da28ef-452c-4071-a841-1aa073a5b944",
				"method": "DELETE"
			},
			{
				"id": "c6cd44d3-3015-481d-88f4-25ab602cc436",
				"method": "DELETE"
			},
			{
				"id": "63b72763-222f-4b0d-819e-0d15e3ab4819",
				"method": "DELETE"
			},
			{
				"id": "615a126a-cba1-497b-a657-f107cd9060d6",
				"method": "DELETE"
			},
			{
				"id": "fa9f5a6a-edaf-4464-925b-27252b7942e2",
				"method": "DELETE"
			},
			{
				"id": "e0228eb0-ff61-4ef9-97fa-b3ae2ae1f728",
				"method": "DELETE"
			},
			{
				"id": "58977ba3-f553-4fe1-90fc-84c11ed5e516",
				"method": "DELETE"
			},
			{
				"id": "7f9d049a-1d50-40fc-9618-6306290807a0",
				"method": "DELETE"
			},
			{
				"id": "6ec0e2c0-3f96-482e-88af-be8e223e15e4",
				"method": "DELETE"
			},
			{
				"id": "1734b7bc-fe2e-43d1-8a02-18f0c64be066",
				"method": "DELETE"
			},
			{
				"id": "d7e7fa9f-a81e-43e8-9d97-4eba0431ec99",
				"method": "DELETE"
			},
			{
				"id": "0057385d-f3eb-478b-92c8-29bd5d130dd3",
				"method": "DELETE"
			},
			{
				"id": "c813e1ce-c68f-4f4a-9d71-410775b095c3",
				"method": "DELETE"
			},
			{
				"id": "2a009cf5-9b9a-4d1c-8f06-55383a6472c9",
				"method": "DELETE"
			},
			{
				"id": "022fa004-d80b-4ced-9463-41d1d1da10a6",
				"method": "DELETE"
			},
			{
				"id": "b967fc91-de64-47d9-b166-1443a4c7db8d",
				"method": "DELETE"
			},
			{
				"id": "e3e96661-3076-4a5d-a07a-48d47eb44969",
				"method": "DELETE"
			},
			{
				"id": "3eb1142a-4d6e-4dfe-a637-90feac7b482f",
				"method": "DELETE"
			},
			{
				"id": "11332c53-2706-4356-a4d6-7869e687726d",
				"method": "DELETE"
			},
			{
				"id": "b3b286a6-11fe-48ff-a52e-771f2231f014",
				"method": "DELETE"
			},
			{
				"id": "eb6ac686-8399-43c5-a130-9bde5f405c84",
				"method": "DELETE"
			},
			{
				"id": "98da529d-2b84-4954-9d2f-26175ec56cb1",
				"method": "DELETE"
			}
		]
	}
}